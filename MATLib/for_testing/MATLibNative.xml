<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MATLibNative</name>
    </assembly>
    <members>
        <member name="T:MATLibNative.MATLib">
            <summary>
            The MATLib class provides a CLS compliant, Object (native) interface to the MATLAB
            functions contained in the files:
            <newpara></newpara>
            D:\小黑屋\matlab小黑屋\graduation project\dtw.m
            <newpara></newpara>
            D:\小黑屋\matlab小黑屋\graduation project\ensemble.m
            <newpara></newpara>
            D:\小黑屋\matlab小黑屋\graduation project\KNN.m
            <newpara></newpara>
            D:\小黑屋\matlab小黑屋\graduation project\KNN_only.m
            <newpara></newpara>
            D:\小黑屋\matlab小黑屋\graduation project\Use_C4_5.m
            </summary>
            <remarks>
            @Version 4.0
            </remarks>
        </member>
        <member name="M:MATLibNative.MATLib.#cctor">
            <summary internal= "true">
            The static constructor instantiates and initializes the MATLAB Runtime instance.
            </summary>
        </member>
        <member name="M:MATLibNative.MATLib.#ctor">
            <summary>
            Constructs a new instance of the MATLib class.
            </summary>
        </member>
        <member name="M:MATLibNative.MATLib.Finalize">
            <summary internal= "true">
            Class destructor called by the CLR garbage collector.
            </summary>
        </member>
        <member name="M:MATLibNative.MATLib.Dispose">
            <summary>
            Frees the native resources associated with this object
            </summary>
        </member>
        <member name="M:MATLibNative.MATLib.Dispose(System.Boolean)">
            <summary internal= "true">
            Internal dispose function
            </summary>
        </member>
        <member name="M:MATLibNative.MATLib.dtw">
             <summary>
             Provides a single output, 0-input Objectinterface to the dtw MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             [Dist,D,k,w,rw,tw]=dtw(r,t,pflag)
             Dynamic Time Warping Algorithm
             Dist is unnormalized distance between t and r
             D is the accumulated distance matrix
             k is the normalizing factor
             w is the optimal path
             t is the vector you are testing against
             r is the vector you are testing
             rw is the warped r vector
             tw is the warped t vector
             pflag  plot flag: 1 (yes), 0(no)
             Version comments:
             rw, tw and pflag added by Pau Mic
             </remarks>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.dtw(System.Object)">
             <summary>
             Provides a single output, 1-input Objectinterface to the dtw MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             [Dist,D,k,w,rw,tw]=dtw(r,t,pflag)
             Dynamic Time Warping Algorithm
             Dist is unnormalized distance between t and r
             D is the accumulated distance matrix
             k is the normalizing factor
             w is the optimal path
             t is the vector you are testing against
             r is the vector you are testing
             rw is the warped r vector
             tw is the warped t vector
             pflag  plot flag: 1 (yes), 0(no)
             Version comments:
             rw, tw and pflag added by Pau Mic
             </remarks>
             <param name="r">Input argument #1</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.dtw(System.Object,System.Object)">
             <summary>
             Provides a single output, 2-input Objectinterface to the dtw MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             [Dist,D,k,w,rw,tw]=dtw(r,t,pflag)
             Dynamic Time Warping Algorithm
             Dist is unnormalized distance between t and r
             D is the accumulated distance matrix
             k is the normalizing factor
             w is the optimal path
             t is the vector you are testing against
             r is the vector you are testing
             rw is the warped r vector
             tw is the warped t vector
             pflag  plot flag: 1 (yes), 0(no)
             Version comments:
             rw, tw and pflag added by Pau Mic
             </remarks>
             <param name="r">Input argument #1</param>
             <param name="t">Input argument #2</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.dtw(System.Int32)">
             <summary>
             Provides the standard 0-input Object interface to the dtw MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             [Dist,D,k,w,rw,tw]=dtw(r,t,pflag)
             Dynamic Time Warping Algorithm
             Dist is unnormalized distance between t and r
             D is the accumulated distance matrix
             k is the normalizing factor
             w is the optimal path
             t is the vector you are testing against
             r is the vector you are testing
             rw is the warped r vector
             tw is the warped t vector
             pflag  plot flag: 1 (yes), 0(no)
             Version comments:
             rw, tw and pflag added by Pau Mic
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.dtw(System.Int32,System.Object)">
             <summary>
             Provides the standard 1-input Object interface to the dtw MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             [Dist,D,k,w,rw,tw]=dtw(r,t,pflag)
             Dynamic Time Warping Algorithm
             Dist is unnormalized distance between t and r
             D is the accumulated distance matrix
             k is the normalizing factor
             w is the optimal path
             t is the vector you are testing against
             r is the vector you are testing
             rw is the warped r vector
             tw is the warped t vector
             pflag  plot flag: 1 (yes), 0(no)
             Version comments:
             rw, tw and pflag added by Pau Mic
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="r">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.dtw(System.Int32,System.Object,System.Object)">
             <summary>
             Provides the standard 2-input Object interface to the dtw MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             [Dist,D,k,w,rw,tw]=dtw(r,t,pflag)
             Dynamic Time Warping Algorithm
             Dist is unnormalized distance between t and r
             D is the accumulated distance matrix
             k is the normalizing factor
             w is the optimal path
             t is the vector you are testing against
             r is the vector you are testing
             rw is the warped r vector
             tw is the warped t vector
             pflag  plot flag: 1 (yes), 0(no)
             Version comments:
             rw, tw and pflag added by Pau Mic
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="r">Input argument #1</param>
             <param name="t">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.dtw(System.Int32,System.Object[]@,System.Object[],System.Object[])">
             <summary>
             Provides an interface for the dtw function in which the input and output
             arguments are specified as an array of Objects.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             M-Documentation:
             [Dist,D,k,w,rw,tw]=dtw(r,t,pflag)
             Dynamic Time Warping Algorithm
             Dist is unnormalized distance between t and r
             D is the accumulated distance matrix
             k is the normalizing factor
             w is the optimal path
             t is the vector you are testing against
             r is the vector you are testing
             rw is the warped r vector
             tw is the warped t vector
             pflag  plot flag: 1 (yes), 0(no)
             Version comments:
             rw, tw and pflag added by Pau Mic
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of Object output arguments</param>
             <param name= "argsIn">Array of Object input arguments</param>
             <param name= "varArgsIn">Array of Object representing variable input
             arguments</param>
            
        </member>
        <member name="M:MATLibNative.MATLib.ensemble">
             <summary>
             Provides a single output, 0-input Objectinterface to the ensemble MATLAB
             function.
             </summary>
             <remarks>
             </remarks>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.ensemble(System.Object)">
             <summary>
             Provides a single output, 1-input Objectinterface to the ensemble MATLAB
             function.
             </summary>
             <remarks>
             </remarks>
             <param name="y_c">Input argument #1</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.ensemble(System.Object,System.Object)">
             <summary>
             Provides a single output, 2-input Objectinterface to the ensemble MATLAB
             function.
             </summary>
             <remarks>
             </remarks>
             <param name="y_c">Input argument #1</param>
             <param name="y_cPAA">Input argument #2</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.ensemble(System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 3-input Objectinterface to the ensemble MATLAB
             function.
             </summary>
             <remarks>
             </remarks>
             <param name="y_c">Input argument #1</param>
             <param name="y_cPAA">Input argument #2</param>
             <param name="y_t">Input argument #3</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.ensemble(System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 4-input Objectinterface to the ensemble MATLAB
             function.
             </summary>
             <remarks>
             </remarks>
             <param name="y_c">Input argument #1</param>
             <param name="y_cPAA">Input argument #2</param>
             <param name="y_t">Input argument #3</param>
             <param name="sign">Input argument #4</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.ensemble(System.Object,System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 5-input Objectinterface to the ensemble MATLAB
             function.
             </summary>
             <remarks>
             </remarks>
             <param name="y_c">Input argument #1</param>
             <param name="y_cPAA">Input argument #2</param>
             <param name="y_t">Input argument #3</param>
             <param name="sign">Input argument #4</param>
             <param name="test_Max">Input argument #5</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.ensemble(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 6-input Objectinterface to the ensemble MATLAB
             function.
             </summary>
             <remarks>
             </remarks>
             <param name="y_c">Input argument #1</param>
             <param name="y_cPAA">Input argument #2</param>
             <param name="y_t">Input argument #3</param>
             <param name="sign">Input argument #4</param>
             <param name="test_Max">Input argument #5</param>
             <param name="test_Min">Input argument #6</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.ensemble(System.Int32)">
             <summary>
             Provides the standard 0-input Object interface to the ensemble MATLAB function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.ensemble(System.Int32,System.Object)">
             <summary>
             Provides the standard 1-input Object interface to the ensemble MATLAB function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="y_c">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.ensemble(System.Int32,System.Object,System.Object)">
             <summary>
             Provides the standard 2-input Object interface to the ensemble MATLAB function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="y_c">Input argument #1</param>
             <param name="y_cPAA">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.ensemble(System.Int32,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 3-input Object interface to the ensemble MATLAB function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="y_c">Input argument #1</param>
             <param name="y_cPAA">Input argument #2</param>
             <param name="y_t">Input argument #3</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.ensemble(System.Int32,System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 4-input Object interface to the ensemble MATLAB function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="y_c">Input argument #1</param>
             <param name="y_cPAA">Input argument #2</param>
             <param name="y_t">Input argument #3</param>
             <param name="sign">Input argument #4</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.ensemble(System.Int32,System.Object,System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 5-input Object interface to the ensemble MATLAB function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="y_c">Input argument #1</param>
             <param name="y_cPAA">Input argument #2</param>
             <param name="y_t">Input argument #3</param>
             <param name="sign">Input argument #4</param>
             <param name="test_Max">Input argument #5</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.ensemble(System.Int32,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 6-input Object interface to the ensemble MATLAB function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="y_c">Input argument #1</param>
             <param name="y_cPAA">Input argument #2</param>
             <param name="y_t">Input argument #3</param>
             <param name="sign">Input argument #4</param>
             <param name="test_Max">Input argument #5</param>
             <param name="test_Min">Input argument #6</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.ensemble(System.Int32,System.Object[]@,System.Object[],System.Object[])">
             <summary>
             Provides an interface for the ensemble function in which the input and output
             arguments are specified as an array of Objects.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of Object output arguments</param>
             <param name= "argsIn">Array of Object input arguments</param>
             <param name= "varArgsIn">Array of Object representing variable input
             arguments</param>
            
        </member>
        <member name="M:MATLibNative.MATLib.KNN">
             <summary>
             Provides a single output, 0-input Objectinterface to the KNN MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             inx 为 输入测试数据，data为样本数据，labels为样本标签
             </remarks>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.KNN(System.Object)">
             <summary>
             Provides a single output, 1-input Objectinterface to the KNN MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             inx 为 输入测试数据，data为样本数据，labels为样本标签
             </remarks>
             <param name="inx">Input argument #1</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.KNN(System.Object,System.Object)">
             <summary>
             Provides a single output, 2-input Objectinterface to the KNN MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             inx 为 输入测试数据，data为样本数据，labels为样本标签
             </remarks>
             <param name="inx">Input argument #1</param>
             <param name="data">Input argument #2</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.KNN(System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 3-input Objectinterface to the KNN MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             inx 为 输入测试数据，data为样本数据，labels为样本标签
             </remarks>
             <param name="inx">Input argument #1</param>
             <param name="data">Input argument #2</param>
             <param name="labels">Input argument #3</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.KNN(System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 4-input Objectinterface to the KNN MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             inx 为 输入测试数据，data为样本数据，labels为样本标签
             </remarks>
             <param name="inx">Input argument #1</param>
             <param name="data">Input argument #2</param>
             <param name="labels">Input argument #3</param>
             <param name="k">Input argument #4</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.KNN(System.Int32)">
             <summary>
             Provides the standard 0-input Object interface to the KNN MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             inx 为 输入测试数据，data为样本数据，labels为样本标签
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.KNN(System.Int32,System.Object)">
             <summary>
             Provides the standard 1-input Object interface to the KNN MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             inx 为 输入测试数据，data为样本数据，labels为样本标签
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="inx">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.KNN(System.Int32,System.Object,System.Object)">
             <summary>
             Provides the standard 2-input Object interface to the KNN MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             inx 为 输入测试数据，data为样本数据，labels为样本标签
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="inx">Input argument #1</param>
             <param name="data">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.KNN(System.Int32,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 3-input Object interface to the KNN MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             inx 为 输入测试数据，data为样本数据，labels为样本标签
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="inx">Input argument #1</param>
             <param name="data">Input argument #2</param>
             <param name="labels">Input argument #3</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.KNN(System.Int32,System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 4-input Object interface to the KNN MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             inx 为 输入测试数据，data为样本数据，labels为样本标签
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="inx">Input argument #1</param>
             <param name="data">Input argument #2</param>
             <param name="labels">Input argument #3</param>
             <param name="k">Input argument #4</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.KNN(System.Int32,System.Object[]@,System.Object[],System.Object[])">
             <summary>
             Provides an interface for the KNN function in which the input and output
             arguments are specified as an array of Objects.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             M-Documentation:
             inx 为 输入测试数据，data为样本数据，labels为样本标签
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of Object output arguments</param>
             <param name= "argsIn">Array of Object input arguments</param>
             <param name= "varArgsIn">Array of Object representing variable input
             arguments</param>
            
        </member>
        <member name="M:MATLibNative.MATLib.KNN_only">
             <summary>
             Provides a single output, 0-input Objectinterface to the KNN_only MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             inx 为 输入测试数据，data为样本数据，labels为样本标签
             </remarks>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.KNN_only(System.Object)">
             <summary>
             Provides a single output, 1-input Objectinterface to the KNN_only MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             inx 为 输入测试数据，data为样本数据，labels为样本标签
             </remarks>
             <param name="inx">Input argument #1</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.KNN_only(System.Object,System.Object)">
             <summary>
             Provides a single output, 2-input Objectinterface to the KNN_only MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             inx 为 输入测试数据，data为样本数据，labels为样本标签
             </remarks>
             <param name="inx">Input argument #1</param>
             <param name="data">Input argument #2</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.KNN_only(System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 3-input Objectinterface to the KNN_only MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             inx 为 输入测试数据，data为样本数据，labels为样本标签
             </remarks>
             <param name="inx">Input argument #1</param>
             <param name="data">Input argument #2</param>
             <param name="labels">Input argument #3</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.KNN_only(System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 4-input Objectinterface to the KNN_only MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             inx 为 输入测试数据，data为样本数据，labels为样本标签
             </remarks>
             <param name="inx">Input argument #1</param>
             <param name="data">Input argument #2</param>
             <param name="labels">Input argument #3</param>
             <param name="k">Input argument #4</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.KNN_only(System.Int32)">
             <summary>
             Provides the standard 0-input Object interface to the KNN_only MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             inx 为 输入测试数据，data为样本数据，labels为样本标签
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.KNN_only(System.Int32,System.Object)">
             <summary>
             Provides the standard 1-input Object interface to the KNN_only MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             inx 为 输入测试数据，data为样本数据，labels为样本标签
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="inx">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.KNN_only(System.Int32,System.Object,System.Object)">
             <summary>
             Provides the standard 2-input Object interface to the KNN_only MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             inx 为 输入测试数据，data为样本数据，labels为样本标签
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="inx">Input argument #1</param>
             <param name="data">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.KNN_only(System.Int32,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 3-input Object interface to the KNN_only MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             inx 为 输入测试数据，data为样本数据，labels为样本标签
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="inx">Input argument #1</param>
             <param name="data">Input argument #2</param>
             <param name="labels">Input argument #3</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.KNN_only(System.Int32,System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 4-input Object interface to the KNN_only MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             inx 为 输入测试数据，data为样本数据，labels为样本标签
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="inx">Input argument #1</param>
             <param name="data">Input argument #2</param>
             <param name="labels">Input argument #3</param>
             <param name="k">Input argument #4</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.KNN_only(System.Int32,System.Object[]@,System.Object[],System.Object[])">
             <summary>
             Provides an interface for the KNN_only function in which the input and output
             arguments are specified as an array of Objects.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             M-Documentation:
             inx 为 输入测试数据，data为样本数据，labels为样本标签
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of Object output arguments</param>
             <param name= "argsIn">Array of Object input arguments</param>
             <param name= "varArgsIn">Array of Object representing variable input
             arguments</param>
            
        </member>
        <member name="M:MATLibNative.MATLib.Use_C4_5">
             <summary>
             Provides a single output, 0-input Objectinterface to the Use_C4_5 MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             Classify using Quinlan's C4.5 algorithm  
             Inputs:  
             training_patterns   - Train patterns 训练样本  每一列代表一个样本
             每一行代表一个特征
             training_targets    - Train targets  1×训练样本个数 每个训练样本对应的判别值
             test_patterns       - Test  patterns 测试样本，每一列代表一个样本  
             inc_node            - Percentage of incorrectly assigned samples at a node 
             一个节点上未正确分配的样本的百分比
             inc_node为防止过拟合，表示样本数小于一定阈值结束递归，可设置为5-10
             注意inc_node设置太大的话会导致分类准确率下降，太小的话可能会导致过拟合  
             Nu is to determine whether the variable is discrete or continuous (the value is
             always set to 10)  
             Nu用于确定变量是离散还是连续（该值始终设置为10）
             这里用10作为一个阈值，如果某个特征的无重复的特征值的数目比这个阈值还小，就认为这个
             特征是离散的
             Outputs  
             test_targets        - Predicted targets 1×测试样本个数
             得到每个测试样本对应的判别值
             也就是输出所有测试样本最终的判别情况
             </remarks>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.Use_C4_5(System.Object)">
             <summary>
             Provides a single output, 1-input Objectinterface to the Use_C4_5 MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             Classify using Quinlan's C4.5 algorithm  
             Inputs:  
             training_patterns   - Train patterns 训练样本  每一列代表一个样本
             每一行代表一个特征
             training_targets    - Train targets  1×训练样本个数 每个训练样本对应的判别值
             test_patterns       - Test  patterns 测试样本，每一列代表一个样本  
             inc_node            - Percentage of incorrectly assigned samples at a node 
             一个节点上未正确分配的样本的百分比
             inc_node为防止过拟合，表示样本数小于一定阈值结束递归，可设置为5-10
             注意inc_node设置太大的话会导致分类准确率下降，太小的话可能会导致过拟合  
             Nu is to determine whether the variable is discrete or continuous (the value is
             always set to 10)  
             Nu用于确定变量是离散还是连续（该值始终设置为10）
             这里用10作为一个阈值，如果某个特征的无重复的特征值的数目比这个阈值还小，就认为这个
             特征是离散的
             Outputs  
             test_targets        - Predicted targets 1×测试样本个数
             得到每个测试样本对应的判别值
             也就是输出所有测试样本最终的判别情况
             </remarks>
             <param name="train_patterns">Input argument #1</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.Use_C4_5(System.Object,System.Object)">
             <summary>
             Provides a single output, 2-input Objectinterface to the Use_C4_5 MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             Classify using Quinlan's C4.5 algorithm  
             Inputs:  
             training_patterns   - Train patterns 训练样本  每一列代表一个样本
             每一行代表一个特征
             training_targets    - Train targets  1×训练样本个数 每个训练样本对应的判别值
             test_patterns       - Test  patterns 测试样本，每一列代表一个样本  
             inc_node            - Percentage of incorrectly assigned samples at a node 
             一个节点上未正确分配的样本的百分比
             inc_node为防止过拟合，表示样本数小于一定阈值结束递归，可设置为5-10
             注意inc_node设置太大的话会导致分类准确率下降，太小的话可能会导致过拟合  
             Nu is to determine whether the variable is discrete or continuous (the value is
             always set to 10)  
             Nu用于确定变量是离散还是连续（该值始终设置为10）
             这里用10作为一个阈值，如果某个特征的无重复的特征值的数目比这个阈值还小，就认为这个
             特征是离散的
             Outputs  
             test_targets        - Predicted targets 1×测试样本个数
             得到每个测试样本对应的判别值
             也就是输出所有测试样本最终的判别情况
             </remarks>
             <param name="train_patterns">Input argument #1</param>
             <param name="train_targets">Input argument #2</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.Use_C4_5(System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 3-input Objectinterface to the Use_C4_5 MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             Classify using Quinlan's C4.5 algorithm  
             Inputs:  
             training_patterns   - Train patterns 训练样本  每一列代表一个样本
             每一行代表一个特征
             training_targets    - Train targets  1×训练样本个数 每个训练样本对应的判别值
             test_patterns       - Test  patterns 测试样本，每一列代表一个样本  
             inc_node            - Percentage of incorrectly assigned samples at a node 
             一个节点上未正确分配的样本的百分比
             inc_node为防止过拟合，表示样本数小于一定阈值结束递归，可设置为5-10
             注意inc_node设置太大的话会导致分类准确率下降，太小的话可能会导致过拟合  
             Nu is to determine whether the variable is discrete or continuous (the value is
             always set to 10)  
             Nu用于确定变量是离散还是连续（该值始终设置为10）
             这里用10作为一个阈值，如果某个特征的无重复的特征值的数目比这个阈值还小，就认为这个
             特征是离散的
             Outputs  
             test_targets        - Predicted targets 1×测试样本个数
             得到每个测试样本对应的判别值
             也就是输出所有测试样本最终的判别情况
             </remarks>
             <param name="train_patterns">Input argument #1</param>
             <param name="train_targets">Input argument #2</param>
             <param name="test_patterns">Input argument #3</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.Use_C4_5(System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 4-input Objectinterface to the Use_C4_5 MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             Classify using Quinlan's C4.5 algorithm  
             Inputs:  
             training_patterns   - Train patterns 训练样本  每一列代表一个样本
             每一行代表一个特征
             training_targets    - Train targets  1×训练样本个数 每个训练样本对应的判别值
             test_patterns       - Test  patterns 测试样本，每一列代表一个样本  
             inc_node            - Percentage of incorrectly assigned samples at a node 
             一个节点上未正确分配的样本的百分比
             inc_node为防止过拟合，表示样本数小于一定阈值结束递归，可设置为5-10
             注意inc_node设置太大的话会导致分类准确率下降，太小的话可能会导致过拟合  
             Nu is to determine whether the variable is discrete or continuous (the value is
             always set to 10)  
             Nu用于确定变量是离散还是连续（该值始终设置为10）
             这里用10作为一个阈值，如果某个特征的无重复的特征值的数目比这个阈值还小，就认为这个
             特征是离散的
             Outputs  
             test_targets        - Predicted targets 1×测试样本个数
             得到每个测试样本对应的判别值
             也就是输出所有测试样本最终的判别情况
             </remarks>
             <param name="train_patterns">Input argument #1</param>
             <param name="train_targets">Input argument #2</param>
             <param name="test_patterns">Input argument #3</param>
             <param name="inc_node">Input argument #4</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.Use_C4_5(System.Object,System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 5-input Objectinterface to the Use_C4_5 MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             Classify using Quinlan's C4.5 algorithm  
             Inputs:  
             training_patterns   - Train patterns 训练样本  每一列代表一个样本
             每一行代表一个特征
             training_targets    - Train targets  1×训练样本个数 每个训练样本对应的判别值
             test_patterns       - Test  patterns 测试样本，每一列代表一个样本  
             inc_node            - Percentage of incorrectly assigned samples at a node 
             一个节点上未正确分配的样本的百分比
             inc_node为防止过拟合，表示样本数小于一定阈值结束递归，可设置为5-10
             注意inc_node设置太大的话会导致分类准确率下降，太小的话可能会导致过拟合  
             Nu is to determine whether the variable is discrete or continuous (the value is
             always set to 10)  
             Nu用于确定变量是离散还是连续（该值始终设置为10）
             这里用10作为一个阈值，如果某个特征的无重复的特征值的数目比这个阈值还小，就认为这个
             特征是离散的
             Outputs  
             test_targets        - Predicted targets 1×测试样本个数
             得到每个测试样本对应的判别值
             也就是输出所有测试样本最终的判别情况
             </remarks>
             <param name="train_patterns">Input argument #1</param>
             <param name="train_targets">Input argument #2</param>
             <param name="test_patterns">Input argument #3</param>
             <param name="inc_node">Input argument #4</param>
             <param name="Nu">Input argument #5</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.Use_C4_5(System.Int32)">
             <summary>
             Provides the standard 0-input Object interface to the Use_C4_5 MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             Classify using Quinlan's C4.5 algorithm  
             Inputs:  
             training_patterns   - Train patterns 训练样本  每一列代表一个样本
             每一行代表一个特征
             training_targets    - Train targets  1×训练样本个数 每个训练样本对应的判别值
             test_patterns       - Test  patterns 测试样本，每一列代表一个样本  
             inc_node            - Percentage of incorrectly assigned samples at a node 
             一个节点上未正确分配的样本的百分比
             inc_node为防止过拟合，表示样本数小于一定阈值结束递归，可设置为5-10
             注意inc_node设置太大的话会导致分类准确率下降，太小的话可能会导致过拟合  
             Nu is to determine whether the variable is discrete or continuous (the value is
             always set to 10)  
             Nu用于确定变量是离散还是连续（该值始终设置为10）
             这里用10作为一个阈值，如果某个特征的无重复的特征值的数目比这个阈值还小，就认为这个
             特征是离散的
             Outputs  
             test_targets        - Predicted targets 1×测试样本个数
             得到每个测试样本对应的判别值
             也就是输出所有测试样本最终的判别情况
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.Use_C4_5(System.Int32,System.Object)">
             <summary>
             Provides the standard 1-input Object interface to the Use_C4_5 MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             Classify using Quinlan's C4.5 algorithm  
             Inputs:  
             training_patterns   - Train patterns 训练样本  每一列代表一个样本
             每一行代表一个特征
             training_targets    - Train targets  1×训练样本个数 每个训练样本对应的判别值
             test_patterns       - Test  patterns 测试样本，每一列代表一个样本  
             inc_node            - Percentage of incorrectly assigned samples at a node 
             一个节点上未正确分配的样本的百分比
             inc_node为防止过拟合，表示样本数小于一定阈值结束递归，可设置为5-10
             注意inc_node设置太大的话会导致分类准确率下降，太小的话可能会导致过拟合  
             Nu is to determine whether the variable is discrete or continuous (the value is
             always set to 10)  
             Nu用于确定变量是离散还是连续（该值始终设置为10）
             这里用10作为一个阈值，如果某个特征的无重复的特征值的数目比这个阈值还小，就认为这个
             特征是离散的
             Outputs  
             test_targets        - Predicted targets 1×测试样本个数
             得到每个测试样本对应的判别值
             也就是输出所有测试样本最终的判别情况
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="train_patterns">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.Use_C4_5(System.Int32,System.Object,System.Object)">
             <summary>
             Provides the standard 2-input Object interface to the Use_C4_5 MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             Classify using Quinlan's C4.5 algorithm  
             Inputs:  
             training_patterns   - Train patterns 训练样本  每一列代表一个样本
             每一行代表一个特征
             training_targets    - Train targets  1×训练样本个数 每个训练样本对应的判别值
             test_patterns       - Test  patterns 测试样本，每一列代表一个样本  
             inc_node            - Percentage of incorrectly assigned samples at a node 
             一个节点上未正确分配的样本的百分比
             inc_node为防止过拟合，表示样本数小于一定阈值结束递归，可设置为5-10
             注意inc_node设置太大的话会导致分类准确率下降，太小的话可能会导致过拟合  
             Nu is to determine whether the variable is discrete or continuous (the value is
             always set to 10)  
             Nu用于确定变量是离散还是连续（该值始终设置为10）
             这里用10作为一个阈值，如果某个特征的无重复的特征值的数目比这个阈值还小，就认为这个
             特征是离散的
             Outputs  
             test_targets        - Predicted targets 1×测试样本个数
             得到每个测试样本对应的判别值
             也就是输出所有测试样本最终的判别情况
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="train_patterns">Input argument #1</param>
             <param name="train_targets">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.Use_C4_5(System.Int32,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 3-input Object interface to the Use_C4_5 MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             Classify using Quinlan's C4.5 algorithm  
             Inputs:  
             training_patterns   - Train patterns 训练样本  每一列代表一个样本
             每一行代表一个特征
             training_targets    - Train targets  1×训练样本个数 每个训练样本对应的判别值
             test_patterns       - Test  patterns 测试样本，每一列代表一个样本  
             inc_node            - Percentage of incorrectly assigned samples at a node 
             一个节点上未正确分配的样本的百分比
             inc_node为防止过拟合，表示样本数小于一定阈值结束递归，可设置为5-10
             注意inc_node设置太大的话会导致分类准确率下降，太小的话可能会导致过拟合  
             Nu is to determine whether the variable is discrete or continuous (the value is
             always set to 10)  
             Nu用于确定变量是离散还是连续（该值始终设置为10）
             这里用10作为一个阈值，如果某个特征的无重复的特征值的数目比这个阈值还小，就认为这个
             特征是离散的
             Outputs  
             test_targets        - Predicted targets 1×测试样本个数
             得到每个测试样本对应的判别值
             也就是输出所有测试样本最终的判别情况
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="train_patterns">Input argument #1</param>
             <param name="train_targets">Input argument #2</param>
             <param name="test_patterns">Input argument #3</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.Use_C4_5(System.Int32,System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 4-input Object interface to the Use_C4_5 MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             Classify using Quinlan's C4.5 algorithm  
             Inputs:  
             training_patterns   - Train patterns 训练样本  每一列代表一个样本
             每一行代表一个特征
             training_targets    - Train targets  1×训练样本个数 每个训练样本对应的判别值
             test_patterns       - Test  patterns 测试样本，每一列代表一个样本  
             inc_node            - Percentage of incorrectly assigned samples at a node 
             一个节点上未正确分配的样本的百分比
             inc_node为防止过拟合，表示样本数小于一定阈值结束递归，可设置为5-10
             注意inc_node设置太大的话会导致分类准确率下降，太小的话可能会导致过拟合  
             Nu is to determine whether the variable is discrete or continuous (the value is
             always set to 10)  
             Nu用于确定变量是离散还是连续（该值始终设置为10）
             这里用10作为一个阈值，如果某个特征的无重复的特征值的数目比这个阈值还小，就认为这个
             特征是离散的
             Outputs  
             test_targets        - Predicted targets 1×测试样本个数
             得到每个测试样本对应的判别值
             也就是输出所有测试样本最终的判别情况
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="train_patterns">Input argument #1</param>
             <param name="train_targets">Input argument #2</param>
             <param name="test_patterns">Input argument #3</param>
             <param name="inc_node">Input argument #4</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.Use_C4_5(System.Int32,System.Object,System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 5-input Object interface to the Use_C4_5 MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             Classify using Quinlan's C4.5 algorithm  
             Inputs:  
             training_patterns   - Train patterns 训练样本  每一列代表一个样本
             每一行代表一个特征
             training_targets    - Train targets  1×训练样本个数 每个训练样本对应的判别值
             test_patterns       - Test  patterns 测试样本，每一列代表一个样本  
             inc_node            - Percentage of incorrectly assigned samples at a node 
             一个节点上未正确分配的样本的百分比
             inc_node为防止过拟合，表示样本数小于一定阈值结束递归，可设置为5-10
             注意inc_node设置太大的话会导致分类准确率下降，太小的话可能会导致过拟合  
             Nu is to determine whether the variable is discrete or continuous (the value is
             always set to 10)  
             Nu用于确定变量是离散还是连续（该值始终设置为10）
             这里用10作为一个阈值，如果某个特征的无重复的特征值的数目比这个阈值还小，就认为这个
             特征是离散的
             Outputs  
             test_targets        - Predicted targets 1×测试样本个数
             得到每个测试样本对应的判别值
             也就是输出所有测试样本最终的判别情况
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="train_patterns">Input argument #1</param>
             <param name="train_targets">Input argument #2</param>
             <param name="test_patterns">Input argument #3</param>
             <param name="inc_node">Input argument #4</param>
             <param name="Nu">Input argument #5</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MATLibNative.MATLib.Use_C4_5(System.Int32,System.Object[]@,System.Object[],System.Object[])">
             <summary>
             Provides an interface for the Use_C4_5 function in which the input and output
             arguments are specified as an array of Objects.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             M-Documentation:
             Classify using Quinlan's C4.5 algorithm  
             Inputs:  
             training_patterns   - Train patterns 训练样本  每一列代表一个样本
             每一行代表一个特征
             training_targets    - Train targets  1×训练样本个数 每个训练样本对应的判别值
             test_patterns       - Test  patterns 测试样本，每一列代表一个样本  
             inc_node            - Percentage of incorrectly assigned samples at a node 
             一个节点上未正确分配的样本的百分比
             inc_node为防止过拟合，表示样本数小于一定阈值结束递归，可设置为5-10
             注意inc_node设置太大的话会导致分类准确率下降，太小的话可能会导致过拟合  
             Nu is to determine whether the variable is discrete or continuous (the value is
             always set to 10)  
             Nu用于确定变量是离散还是连续（该值始终设置为10）
             这里用10作为一个阈值，如果某个特征的无重复的特征值的数目比这个阈值还小，就认为这个
             特征是离散的
             Outputs  
             test_targets        - Predicted targets 1×测试样本个数
             得到每个测试样本对应的判别值
             也就是输出所有测试样本最终的判别情况
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of Object output arguments</param>
             <param name= "argsIn">Array of Object input arguments</param>
             <param name= "varArgsIn">Array of Object representing variable input
             arguments</param>
            
        </member>
        <member name="M:MATLibNative.MATLib.WaitForFiguresToDie">
             <summary>
             This method will cause a MATLAB figure window to behave as a modal dialog box.
             The method will not return until all the figure windows associated with this
             component have been closed.
             </summary>
             <remarks>
             An application should only call this method when required to keep the
             MATLAB figure window from disappearing.  Other techniques, such as calling
             Console.ReadLine() from the application should be considered where
             possible.</remarks>
            
        </member>
    </members>
</doc>
